"""Baseline inicial do schema com ENUMs

Revision ID: e325fe9953e1
Revises: 
Create Date: 2025-10-22 14:46:27.263223

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import pgvector.sqlalchemy  # <<< CORREÇÃO ADICIONADA AQUI


# revision identifiers, used by Alembic.
revision: str = 'e325fe9953e1'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ingestion_queue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_uri', sa.String(), nullable=False),
    sa.Column('namespace', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', name='ingestionstatus', schema='ai', native_enum=False), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('processing_log', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='ai'
    )
    op.create_table('rag_documents_1536',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('namespace', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('content_sha256', sa.String(length=64), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=True),
    sa.Column('document_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('namespace', 'content_sha256', name='uq_namespace_content_hash'),
    schema='ai'
    )
    op.create_index(op.f('ix_ai_rag_documents_1536_content_sha256'), 'rag_documents_1536', ['content_sha256'], unique=False, schema='ai')
    op.create_index(op.f('ix_ai_rag_documents_1536_namespace'), 'rag_documents_1536', ['namespace'], unique=False, schema='ai')
    op.create_table('clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('whatsapp_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='crm'
    )
    op.create_index(op.f('ix_crm_clients_whatsapp_id'), 'clients', ['whatsapp_id'], unique=True, schema='crm')
    op.create_table('consents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('consent_type', sa.String(), nullable=False),
    sa.Column('is_given', sa.Boolean(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['crm.clients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='crm'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('consents', schema='crm')
    op.drop_index(op.f('ix_crm_clients_whatsapp_id'), table_name='clients', schema='crm')
    op.drop_table('clients', schema='crm')
    op.drop_index(op.f('ix_ai_rag_documents_1536_namespace'), table_name='rag_documents_1536', schema='ai')
    op.drop_index(op.f('ix_ai_rag_documents_1536_content_sha256'), table_name='rag_documents_1536', schema='ai')
    op.drop_table('rag_documents_1536', schema='ai')
    op.drop_table('ingestion_queue', schema='ai')
    # ### end Alembic commands ###